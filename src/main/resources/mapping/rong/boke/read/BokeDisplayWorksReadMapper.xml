<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.byk.rong.boke.mapper.read.BokeDisplayWorksReadMapper">

  <!--配置缓存数据-->
  <!--FIFO 缓存,并每隔 60 秒刷新,存数结果对象或列表的 512 个引用,而且返回的对象被认为是只读的,-->
  <!--因此在不同线程中的调用者之间修改它们会 导致冲突。-->


  <!--可用的收回策略有:-->
  <!--LRU – 最近最少使用的:移除最长时间不被使用的对象。-->
  <!--FIFO – 先进先出:按对象进入缓存的顺序来移除它们。-->
  <!--SOFT – 软引用:移除基于垃圾回收器状态和软引用规则的对象。-->
  <!--WEAK – 弱引用:更积极地移除基于垃圾收集器状态和弱引用规则的对象。-->
  <!--默认的是 LRU。-->

  <!--flushInterval(刷新间隔)可以被设置为任意的正整数,而且它们代表一个合理的毫秒 形式的时间段。-->
    <!--默认情况是不设置,也就是没有刷新间隔,缓存仅仅调用语句时刷新。-->
  <!--size(引用数目)可以被设置为任意正整数,要记住你缓存的对象数目和你运行环境的 可用内存资源数目。默认值是 1024。-->
  <!--readOnly(只读)属性可以被设置为 true 或 false。只读的缓存会给所有调用者返回缓 存对象的相同实例。-->
    <!--因此这些对象不能被修改。这提供了很重要的性能优势。可读写的缓存 会返回缓存对象的拷贝(通过序列化) 。-->
    <!--这会慢一些,但是安全,因此默认是 false。-->
  <!--<cache eviction="FIFO" flushInterval="60000" size="512" readOnly="true"/>-->

  <resultMap id="BaseResultMap" type="com.byk.rong.boke.entity.BokeDisplayWorks">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="page_name" jdbcType="VARCHAR" property="pageName" />
    <result column="page_address" jdbcType="VARCHAR" property="pageAddress" />
    <result column="page_link" jdbcType="VARCHAR" property="pageLink" />
    <result column="page_class" jdbcType="VARCHAR" property="pageClass" />
    <result column="target_link" jdbcType="VARCHAR" property="targetLink" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="delete_user" jdbcType="VARCHAR" property="deleteUser" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
    <result column="del_flag" jdbcType="VARCHAR" property="delFlag" />
  </resultMap>

  <sql id="Base_Column_List">
    id, project_name,page_name, page_address, page_link, page_class, target_link, create_user, create_time,
    update_user, update_time, delete_user, delete_time, del_flag
  </sql>
  <select id="selectById" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from display_works
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectByParams"  parameterType="com.byk.rong.boke.entity.BokeDisplayWorks" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM display_works
    <where>
      <if test="id != null and id != '' "> AND id =  #{id} </if>
      <if test="projectName != null and projectName != '' "> AND project_name =  #{projectName} </if>
      <if test="pageName != null and pageName != '' "> AND page_name =  #{pageName} </if>
      <if test="pageAddress != null and pageAddress != '' "> AND page_address =  #{pageAddress} </if>
      <if test="pageLink != null and pageLink != '' "> AND page_link =  #{pageLink} </if>
      <if test="pageClass != null and pageClass != '' "> AND page_class =  #{pageClass} </if>
      <if test="targetLink != null and targetLink != '' "> AND target_link =  #{targetLink} </if>
      <if test="createUser != null and createUser != ''"> and create_user = #{createUser} </if>
      <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
      <if test="updateUser != null and updateUser != ''"> and update_user = #{updateUser} </if>
      <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
      <if test="deleteUser != null and deleteUser != ''"> and delete_user = #{deleteUser} </if>
      <if test="deleteTime != null and deleteTime != ''"> and delete_time = #{deleteTime} </if>
      <if test="delFlag != null and delFlag != ''"> and del_flag = #{delFlag} </if>
    </where>
        order by create_time desc
    <if test="offset != null and limit != null">
      limit ${offset}, ${limit}
    </if>
  </select>
</mapper>